sat
(
  (define-fun c2 () Cell
    (cell 1 8))
  (define-fun c1 () Cell
    (cell 1 7))
  (define-fun ccolleft ((x!0 Column) (x!1 Column)) Bool
    (let ((a!1 (not (<= (x (upperleft x!0)) (x (bottomright x!1))))))
      (and (= (y (upperleft x!1)) (y (upperleft x!0)))
           (= (y (bottomright x!1)) (y (bottomright x!0)))
           a!1)))
  (define-fun ccolright ((x!0 Column) (x!1 Column)) Bool
    (let ((a!1 (not (<= (x (upperleft x!1)) (x (bottomright x!0))))))
      (and (= (y (upperleft x!1)) (y (upperleft x!0)))
           (= (y (bottomright x!1)) (y (bottomright x!0)))
           a!1)))
  (define-fun ccolbelow ((x!0 Column) (x!1 Column)) Bool
    (let ((a!1 (not (<= (y (bottomright x!0)) (y (upperleft x!1))))))
      (and (= (x (upperleft x!1)) (x (upperleft x!0)))
           (= (x (bottomright x!1)) (x (bottomright x!0)))
           a!1)))
  (define-fun ccolabove ((x!0 Column) (x!1 Column)) Bool
    (let ((a!1 (not (<= (y (bottomright x!1)) (y (upperleft x!0))))))
      (and (= (x (upperleft x!1)) (x (upperleft x!0)))
           (= (x (bottomright x!1)) (x (bottomright x!0)))
           a!1)))
  (define-fun ccadj ((x!0 Cell) (x!1 Cell)) Bool
    (let ((a!1 (and (= (y x!1) (+ (- 1) (y x!0))) (= (x x!1) (x x!0))))
          (a!2 (and (= (y x!1) (+ 1 (y x!0))) (= (x x!1) (x x!0))))
          (a!3 (and (= (x x!1) (+ (- 1) (x x!0))) (= (y x!1) (y x!0))))
          (a!4 (and (= (x x!1) (+ 1 (x x!0))) (= (y x!1) (y x!0)))))
      (or a!1 a!2 a!3 a!4)))
  (define-fun ccleft ((x!0 Cell) (x!1 Cell)) Bool
    (and (= (x x!1) (+ (- 1) (x x!0))) (= (y x!1) (y x!0))))
  (define-fun ccright ((x!0 Cell) (x!1 Cell)) Bool
    (and (= (x x!1) (+ 1 (x x!0))) (= (y x!1) (y x!0))))
  (define-fun ccbelow ((x!0 Cell) (x!1 Cell)) Bool
    (and (= (y x!1) (+ 1 (y x!0))) (= (x x!1) (x x!0))))
  (define-fun ccabove ((x!0 Cell) (x!1 Cell)) Bool
    (and (= (y x!1) (+ (- 1) (y x!0))) (= (x x!1) (x x!0))))
  (define-fun fingerprintValue ((x!0 Cell)) Int
    28)
  (define-fun numericValue ((x!0 Cell)) Int
    (let ((a!1 (ite (and (= (x x!0) 2) (= (y x!0) 1)) 2 1)))
    (let ((a!2 (ite (and (= (x x!0) 3) (= (y x!0) 1)) 3 a!1)))
    (let ((a!3 (ite (and (= (x x!0) 1) (= (y x!0) 2)) 1 a!2)))
    (let ((a!4 (ite (and (= (x x!0) 2) (= (y x!0) 2)) 2 a!3)))
    (let ((a!5 (ite (and (= (x x!0) 3) (= (y x!0) 2)) 3 a!4)))
    (let ((a!6 (ite (and (= (x x!0) 1) (= (y x!0) 3)) 1 a!5)))
    (let ((a!7 (ite (and (= (x x!0) 2) (= (y x!0) 3)) 2 a!6)))
    (let ((a!8 (ite (and (= (x x!0) 3) (= (y x!0) 3)) 3 a!7)))
    (let ((a!9 (ite (and (= (x x!0) 1) (= (y x!0) 4)) 1 a!8)))
    (let ((a!10 (ite (and (= (x x!0) 2) (= (y x!0) 4)) 2 a!9)))
    (let ((a!11 (ite (and (= (x x!0) 3) (= (y x!0) 4)) 3 a!10)))
    (let ((a!12 (ite (and (= (x x!0) 1) (= (y x!0) 5)) 1 a!11)))
    (let ((a!13 (ite (and (= (x x!0) 2) (= (y x!0) 5)) 2 a!12)))
    (let ((a!14 (ite (and (= (x x!0) 3) (= (y x!0) 5)) 3 a!13)))
    (let ((a!15 (ite (and (= (x x!0) 1) (= (y x!0) 6)) 1 a!14)))
    (let ((a!16 (ite (and (= (x x!0) 2) (= (y x!0) 6)) 2 a!15)))
    (let ((a!17 (ite (and (= (x x!0) 3) (= (y x!0) 6)) 3 a!16)))
    (let ((a!18 (ite (and (= (x x!0) 1) (= (y x!0) 7)) 1 a!17)))
    (let ((a!19 (ite (and (= (x x!0) 2) (= (y x!0) 7)) 2 a!18)))
    (let ((a!20 (ite (and (= (x x!0) 3) (= (y x!0) 7)) 3 a!19)))
    (let ((a!21 (ite (and (= (x x!0) 1) (= (y x!0) 8)) 7 a!20)))
    (let ((a!22 (ite (and (= (x x!0) 2) (= (y x!0) 8)) 14 a!21)))
      (ite (and (= (x x!0) 3) (= (y x!0) 8)) 21 a!22))))))))))))))))))))))))
  (define-fun isANumber ((x!0 Cell)) Bool
    (or (and (= (x x!0) 1) (= (y x!0) 8))
        (and (= (x x!0) 2) (= (y x!0) 8))
        (and (= (x x!0) 3) (= (y x!0) 8))
        (and (= (x x!0) 1) (= (y x!0) 1))
        (and (= (x x!0) 2) (= (y x!0) 1))
        (and (= (x x!0) 3) (= (y x!0) 1))
        (and (= (x x!0) 1) (= (y x!0) 2))
        (and (= (x x!0) 2) (= (y x!0) 2))
        (and (= (x x!0) 3) (= (y x!0) 2))
        (and (= (x x!0) 1) (= (y x!0) 3))
        (and (= (x x!0) 2) (= (y x!0) 3))
        (and (= (x x!0) 3) (= (y x!0) 3))
        (and (= (x x!0) 1) (= (y x!0) 4))
        (and (= (x x!0) 2) (= (y x!0) 4))
        (and (= (x x!0) 3) (= (y x!0) 4))
        (and (= (x x!0) 1) (= (y x!0) 5))
        (and (= (x x!0) 2) (= (y x!0) 5))
        (and (= (x x!0) 3) (= (y x!0) 5))
        (and (= (x x!0) 1) (= (y x!0) 6))
        (and (= (x x!0) 2) (= (y x!0) 6))
        (and (= (x x!0) 3) (= (y x!0) 6))
        (and (= (x x!0) 1) (= (y x!0) 7))
        (and (= (x x!0) 2) (= (y x!0) 7))
        (and (= (x x!0) 3) (= (y x!0) 7))))
  (define-fun isAFormula ((x!0 Cell)) Bool
    (or (and (= (x x!0) 1) (= (y x!0) 8))
        (and (= (x x!0) 2) (= (y x!0) 8))
        (and (= (x x!0) 3) (= (y x!0) 8))))
  (define-fun inUsedRange ((x!0 Cell)) Bool
    (and (>= (x x!0) 1) (>= (x x!0) 3) (>= (y x!0) 1) (>= (y x!0) 8)))
  (define-fun isAColumn ((x!0 Column)) Bool
    (let ((a!1 (and (= (x (upperleft x!0)) 1)
                    (= (y (upperleft x!0)) 8)
                    (= (x (bottomright x!0)) 3)
                    (= (y (bottomright x!0)) 8)))
          (a!2 (and (= (x (upperleft x!0)) 1)
                    (= (y (upperleft x!0)) 1)
                    (= (x (bottomright x!0)) 1)
                    (= (y (bottomright x!0)) 8)))
          (a!3 (and (= (x (upperleft x!0)) 2)
                    (= (y (upperleft x!0)) 1)
                    (= (x (bottomright x!0)) 2)
                    (= (y (bottomright x!0)) 8)))
          (a!4 (and (= (x (upperleft x!0)) 3)
                    (= (y (upperleft x!0)) 1)
                    (= (x (bottomright x!0)) 3)
                    (= (y (bottomright x!0)) 8)))
          (a!5 (and (= (x (upperleft x!0)) 1)
                    (= (y (upperleft x!0)) 1)
                    (= (x (bottomright x!0)) 3)
                    (= (y (bottomright x!0)) 1)))
          (a!6 (and (= (x (upperleft x!0)) 1)
                    (= (y (upperleft x!0)) 2)
                    (= (x (bottomright x!0)) 3)
                    (= (y (bottomright x!0)) 2)))
          (a!7 (and (= (x (upperleft x!0)) 1)
                    (= (y (upperleft x!0)) 3)
                    (= (x (bottomright x!0)) 3)
                    (= (y (bottomright x!0)) 3)))
          (a!8 (and (= (x (upperleft x!0)) 1)
                    (= (y (upperleft x!0)) 4)
                    (= (x (bottomright x!0)) 3)
                    (= (y (bottomright x!0)) 4)))
          (a!9 (and (= (x (upperleft x!0)) 1)
                    (= (y (upperleft x!0)) 5)
                    (= (x (bottomright x!0)) 3)
                    (= (y (bottomright x!0)) 5)))
          (a!10 (and (= (x (upperleft x!0)) 1)
                     (= (y (upperleft x!0)) 6)
                     (= (x (bottomright x!0)) 3)
                     (= (y (bottomright x!0)) 6)))
          (a!11 (and (= (x (upperleft x!0)) 1)
                     (= (y (upperleft x!0)) 7)
                     (= (x (bottomright x!0)) 3)
                     (= (y (bottomright x!0)) 7))))
      (or a!1 a!2 a!3 a!4 a!5 a!6 a!7 a!8 a!9 a!10 a!11)))
)